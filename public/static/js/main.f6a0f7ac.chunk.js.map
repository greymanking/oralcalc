{"version":3,"sources":["component/taskZone.js","component/message.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["TaskZone","props","starttime","state","pos","answer","showAnswer","bind","moveNext","commitRec","onKeyPressed","this","Date","getTime","block","focus","setState","eval","questions","curtime","finish","key","reckey","datems","secs","Math","round","e","which","length","btn","onClick","tabindex","onKeyPressCapture","ref","className","React","PureComponent","Message","classes","onAnimEnd","nextProps","settings","time","cls","type","onAnimationEnd","text","secsToMinSecs","minutes","floor","rv","seconds","TaskList","itemsList","i","item","push","index","activeIndex","sel","target","getAttribute","title","disabled","canOperate","start","showRecs","RecList","items","list","map","datetime","fmt","ret","date","setTime","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","padStart","formatDate","best","back","ResZone","restart","App","tasks","recsCache","questionsCache","usedTimeCache","stage","activeTaskIndex","fetchingData","message","setActiveTask","backToTaskList","startWork","finishWork","submitRec","restartWork","showMessage","axios","defaults","retry","retryDelay","interceptors","response","use","undefined","err","config","__retryCount","console","log","Promise","reject","resolve","setTimeout","then","localStorage","startsWith","recdata","substr","split","parseInt","get","ts","data","catch","error","keyval","rs","recArr","rec","sort","a","b","qs","post","res","info","addrec","ls_item","getItem","removeItem","setItem","body","taskinfoFR","taskinfoFW","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6a0f7ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TaskZone extends React.PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n      this.starttime = 0;\r\n  \r\n      this.state = {\r\n        pos: 0,\r\n        answer: \"看答案\"\r\n      }\r\n  \r\n      this.showAnswer = this.showAnswer.bind(this);\r\n      this.moveNext = this.moveNext.bind(this);\r\n      this.commitRec = this.commitRec.bind(this);\r\n      this.onKeyPressed = this.onKeyPressed.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.starttime = new Date().getTime();\r\n      this.block.focus();\r\n    }\r\n  \r\n    showAnswer() {\r\n      this.setState({ answer: \"答案：\" + eval(this.props.questions[this.state.pos]) });\r\n    }\r\n  \r\n    moveNext() {\r\n      this.setState({ answer: \"看答案\", pos: this.state.pos + 1 });\r\n    }\r\n  \r\n    commitRec() {\r\n      let curtime = new Date().getTime();\r\n      this.props.finish({\r\n        key: this.props.reckey, datems: curtime,\r\n        secs: Math.round((curtime - this.starttime) / 1000)\r\n      });\r\n    }\r\n\r\n    onKeyPressed(e){\r\n      if(e.which === 13){\r\n        (this.state.pos === this.props.questions.length - 1) ?\r\n        this.commitRec():this.moveNext()\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      let btn = (this.state.pos === this.props.questions.length - 1) ?\r\n        <button onClick={this.commitRec}>结  束</button> :\r\n        <button onClick={this.moveNext}>下一题</button>;\r\n      //为了让div可以获得焦点以接收keyPress事件，给它加上tabindex\r\n      //为了让它一开始就有焦点，给它加ref并在组件加载完毕时聚焦\r\n      return (\r\n        <div tabindex=\"3\" onKeyPressCapture={this.onKeyPressed} ref={(block)=>this.block=block}>\r\n          <div className=\"header\">第{this.state.pos + 1}题</div>\r\n          <div className=\"content\" >\r\n            <div className=\"extra1\">{this.props.questions[this.state.pos]}</div>\r\n            <div className=\"anspane\" onClick={this.showAnswer}>{this.state.answer}</div>\r\n          </div>\r\n          <div className=\"btnspane\" >{btn}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default TaskZone;","import React from \"react\";\r\n\r\nconst NORMALMSG = 1, ERRORMSG = 2;\r\n\r\n//CSS3 animation的机制决定了，要在动画播放结束后将相关类移除，否则下次无法播放\r\n//react的刷新机制决定了，以上动作不可以直接用父组件的setState实现\r\nclass Message extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classes: \"msg\" }\r\n    this.onAnimEnd = this.onAnimEnd.bind(this);\r\n  }\r\n\r\n  onAnimEnd() {\r\n    this.setState({ classes: \"msg\" });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.settings.time === nextProps.settings.time) {\r\n      return;\r\n    }\r\n    let cls = \"msg\";\r\n    if (nextProps.settings.type === ERRORMSG) {\r\n      cls += \" error-msg-color runanimation\";\r\n    } else if (nextProps.settings.type === NORMALMSG) {\r\n      cls += \" normal-msg-color runanimation\";\r\n    }\r\n    this.setState({ classes: cls });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.classes} onAnimationEnd={this.onAnimEnd}>\r\n        {this.props.settings.text}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Message;\r\nexport { NORMALMSG, ERRORMSG };","function formatDate(datetime, fmt) {\r\n    let date = new Date();\r\n    date.setTime(datetime);\r\n    let ret;\r\n    const opt = {\r\n        \"Y+\": date.getFullYear().toString(), // 年\r\n        \"m+\": (date.getMonth() + 1).toString(), // 月\r\n        \"d+\": date.getDate().toString(), // 日\r\n        \"H+\": date.getHours().toString(), // 时\r\n        \"M+\": date.getMinutes().toString(), // 分\r\n        \"S+\": date.getSeconds().toString() // 秒\r\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n    };\r\n\r\n    for (let k in opt) {\r\n        ret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n        if (ret) {\r\n            fmt = fmt.replace(ret[1], (ret[1].length === 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\r\n        };\r\n    };\r\n    return fmt;\r\n}\r\n\r\nfunction secsToMinSecs(secs) {\r\n    let minutes = Math.floor(secs / 60);\r\n    let rv = minutes === 0 ? \"\" : (minutes + \"分\");\r\n    let seconds = secs - minutes * 60;\r\n    rv += ((seconds < 10 ? \"0\" : \"\") + seconds + \"秒\");\r\n\r\n    return rv;\r\n}\r\n\r\nexport {formatDate, secsToMinSecs};","import React from 'react';\nimport './App.css';\n\nimport TaskZone from './component/taskZone';\nimport Message, { NORMALMSG, ERRORMSG } from './component/message';\n\nimport axios from \"axios\";\n\n//import './utils'; //运行utils中的代码\nimport { formatDate, secsToMinSecs } from './utils';\n\nconst RECS = -2, TASKLIST = -1, WORKING = 0, FINISHED = 1;\n\nclass App extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.tasks = [];\n    this.recsCache = {};\n    this.questionsCache = {};\n    this.usedTimeCache = 0;\n\n    this.state = {\n      stage: TASKLIST,\n      activeTaskIndex: 0,\n      fetchingData: true,\n      message: { type: 0, text: \"n/a\", time: 0 }\n    };\n\n    this.setActiveTask = this.setActiveTask.bind(this);\n    this.showRecs = this.showRecs.bind(this);\n    this.backToTaskList = this.backToTaskList.bind(this);\n    this.startWork = this.startWork.bind(this);\n    this.finishWork = this.finishWork.bind(this);\n    this.submitRec = this.submitRec.bind(this);\n    this.restartWork = this.restartWork.bind(this);\n    this.showMessage = this.showMessage.bind(this);\n  }\n\n  showMessage(text, type) {\n    let time = new Date().getTime();\n    this.setState({ message: { type: type, text: text, time: time } });\n  }\n\n  componentDidMount() {\n    axios.defaults.retry = 3;\n    axios.defaults.retryDelay = 500;\n\n    axios.interceptors.response.use(undefined, function axiosRetryInterceptor(err) {\n      var config = err.config;\n      // If config does not exist or the retry option is not set, reject\n      if (!config || !config.retry) return Promise.reject(err);\n\n      // Set the variable for keeping track of the retry count\n      config.__retryCount = config.__retryCount || 0;\n      console.log(config.__retryCount, config.retry);\n      // Check if we've maxed out the total number of retries\n      if (config.__retryCount >= config.retry) {\n        // Reject with the error\n\n        return Promise.reject(err);\n      }\n\n      // Increase the retry count\n      config.__retryCount += 1;\n\n      // Create new promise to handle exponential backoff\n      var backoff = new Promise(function (resolve) {\n        setTimeout(function () {\n          resolve();\n        }, config.retryDelay || 1);\n      });\n\n      // Return the promise in which recalls axios to retry the request\n      return backoff.then(function () {\n        return axios(config);\n      });\n    });\n\n    for (let i = 0; i < localStorage.length; i++) {\n      let k = localStorage.key(i);\n      if (k.startsWith(\"frs\")) {\n        let recdata = {}\n        let [key, datems] = k.substr(3).split(\"_\", 2);\n        recdata.key = key;\n        recdata.datems = parseInt(datems);\n        recdata.secs = parseInt(localStorage[k]);\n        this.submitRec(recdata);\n      }\n    }\n\n    axios.get(\"/dataindex.json\").then((ts) => {\n      this.tasks = ts.data;\n      this.setState({ fetchingData: false });\n    }).catch(error => {\n      this.showMessage(error.toString(), ERRORMSG);\n    });\n  }\n\n  setActiveTask(index) {\n    if (this.state.fetchingData) { return; }\n    this.setState({ activeTaskIndex: parseInt(index) });\n  }\n\n  showRecs() {\n    if (this.state.fetchingData) {\n      return;\n    }\n    this.setState({ fetchingData: true });\n    let keyval = this.tasks[this.state.activeTaskIndex].key;\n    axios.get(\"/recs/\" + keyval).then(\n      (rs) => {\n        let recArr = [];\n        recArr.best = 9999999;\n\n        for (let i = 0; i < rs.data.length; i++) {\n          let rec = rs.data[i];\n          recArr.push({ datems: rec.datems, secs: rec.secs })\n          if (rec.secs < recArr.best) {\n            recArr.best = rec.secs;\n          }\n        }\n        recArr = recArr.sort(function (a, b) { return a.datems > b.datems ? 1 : -1 });\n        this.recsCache[keyval] = recArr;\n        this.setState({ stage: RECS, fetchingData: false });\n      }).catch(error => {\n        this.showMessage(error.toString(), ERRORMSG);\n        this.setState({ fetchingData: false });\n      });\n  }\n\n  backToTaskList() {\n    this.setState({ stage: TASKLIST });\n  }\n\n  startWork() {\n    if (this.state.fetchingData) {\n      return;\n    }\n    this.setState({ fetchingData: true });\n    let keyval = this.tasks[this.state.activeTaskIndex].key;\n    axios.get(\"/data/\" + keyval + \".json\").then(\n      (qs) => {\n        this.questionsCache[keyval] = qs.data;\n        this.setState({ stage: WORKING, fetchingData: false });\n      }).catch(error => {\n        this.showMessage(error.toString(), ERRORMSG);\n        this.setState({ fetchingData: false });\n      });\n  }\n\n  finishWork(recdata) {\n    this.setState({ stage: FINISHED });\n    this.usedTimeCache = recdata.secs;\n    this.submitRec(recdata);\n  }\n\n  submitRec(recdata) {\n    axios.post(\"/rec/\", recdata, { retry: 1, retryDelay: 500 }).then(res => {\n      let info = \"提交成绩\" + (res.data.addrec ? \"成功\" : \"失败\");\n      this.showMessage(info, res.data.addrec ? NORMALMSG : ERRORMSG);\n      let ls_item = \"frs\" + recdata.key + \"_\" + recdata.datems;\n      if (localStorage.getItem(ls_item)) {\n        localStorage.removeItem(ls_item);\n      }\n    }).catch(error => {\n      localStorage.setItem(\"frs\" + recdata.key + \"_\" + recdata.datems, recdata.secs);\n      this.showMessage(error.toString(), ERRORMSG);\n    });\n  }\n\n  restartWork() {\n    this.setState({ stage: TASKLIST });\n  }\n\n  render() {\n    let body = null;\n    switch (this.state.stage) {\n      case TASKLIST:\n        body = <TaskList itemsList={this.tasks} activeIndex={this.state.activeTaskIndex}\n          sel={this.setActiveTask} start={this.startWork} showRecs={this.showRecs}\n          canOperate={!this.state.fetchingData} />;\n        break;\n      case RECS:\n        let taskinfoFR = this.tasks[this.state.activeTaskIndex];\n        body = <RecList title={taskinfoFR.title}\n          list={this.recsCache[taskinfoFR.key]}\n          back={this.backToTaskList} />;\n        break;\n      case WORKING:\n        let taskinfoFW = this.tasks[this.state.activeTaskIndex];\n        body = <TaskZone questions={this.questionsCache[taskinfoFW.key]}\n          finish={this.finishWork}\n          reckey={taskinfoFW.key} />;\n        break;\n      case FINISHED:\n        body = <ResZone text={secsToMinSecs(this.usedTimeCache)} restart={this.restartWork} />;\n        break;\n      default:\n    }\n    return (\n      <div id=\"app\">\n        <Message settings={this.state.message} />\n        {body}\n      </div>\n    );\n  }\n}\n\nfunction TaskList(props) {\n  let itemsList = [];\n  for (let i = 0; i < props.itemsList.length; i++) {\n    let item = props.itemsList[i];\n    itemsList.push(<li key={item.key} index={i} className={i == props.activeIndex ? \"highlightcolor\" : \"\"}\n      onClick={e => props.sel(e.target.getAttribute(\"index\"))}>{item.title}</li>);\n  }\n\n  return (\n    <div>\n      <div className=\"header\">开始</div>\n      <ul className=\"content\" > {itemsList}</ul>\n      <div className=\"btnspane\" >\n        <button disabled={!props.canOperate} onClick={props.start}>出　发</button>\n        <button disabled={!props.canOperate} onClick={props.showRecs}>看成绩</button>\n      </div>\n    </div>\n  )\n}\n\nfunction RecList(props) {\n  let items = props.list.map(\n    (item) => <tr key={item.datems}><td>{formatDate(item.datems, \"YYYY年mm月dd日\")}</td>\n      <td className={props.list.best===item.secs?\"highlightcolor\":\"average\"}>{secsToMinSecs(item.secs)}</td></tr>);\n  return (\n    <div>\n      <div className=\"header\">成绩</div>\n      <div className=\"content\">\n        <div className=\"heading\">{props.title}</div>\n        <table><tbody>{items}</tbody></table>\n      </div>\n      <div className=\"btnspane\" >\n        <button onClick={props.back}>返  回</button>\n      </div>\n    </div>\n  )\n}\n\nfunction ResZone(props) {\n  return (\n    <div>\n      <div className=\"header\">成绩</div>\n      <div className=\"content\">\n        <div className=\"extra2\">{props.text}</div>\n      </div>\n      <div className=\"btnspane\" >\n        <button onClick={props.restart}>再一次</button>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//document.body.style.fontSize = Math.min(16, Math.floor(window.innerWidth / 30)) + \"px\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}